//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE      0
#define NUM       1
#define MEDIA     2
#define FUNCTION  3
#define GAME      4

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;			// <---[[produces tap if held longer than tapping-term-ms]]
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        lc: layer_change {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&to>, <&kp>;
        };

        sc: sticky_layer_change {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&sl>, <&kp>;
        };

        dl: dualayer_change {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&to>, <&sl>;
        };

        ts: temp_sticky {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&mo>, <&to>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            layers = <0 1 2 3>;
            bindings = <&kp ESC>;
        };

        combo_boot {
            timeout-ms = <50>;
            key-positions = <20 31>;
            layers = <1 2 3>;
            bindings = <&bootloader>;
        };

        combo_undo {
            timeout-ms = <50>;
            key-positions = <34 35>;
            layers = <0 1 2 3>;
            bindings = <&kp LC(Z)>;
        };

        combo_shift1 {
            timeout-ms = <50>;
            key-positions = <12 13>;
            layers = <0>;
            bindings = <&kp LSHFT>;
        };

        combo_shift2 {
            timeout-ms = <50>;
            key-positions = <16 17>;
            layers = <0>;
            bindings = <&kp RSHFT>;
        };

        combo_ctrl1 {
            timeout-ms = <50>;
            key-positions = <11 13>;
            layers = <0>;
            bindings = <&kp LCTRL>;
        };

        combo_ctrl2 {
            timeout-ms = <50>;
            key-positions = <16 18>;
            layers = <0>;
            bindings = <&kp RCTRL>;
        };

        combo_alt1 {
            timeout-ms = <50>;
            key-positions = <13 10>;
            layers = <0>;
            bindings = <&kp LALT>;
        };

        combo_alt2 {
            timeout-ms = <50>;
            key-positions = <16 19>;
            layers = <0>;
            bindings = <&kp RALT>;
        };

        combo_super {
            timeout-ms = <50>;
            key-positions = <32 37>;
            layers = <0 2 3 1>;
            bindings = <&kp LGUI>;
        };

        combo_backspace1 {
            key-positions = <5 6>;
            timeout-ms = <50>;
            layers = <0 1 2 3>;
            bindings = <&kp BACKSPACE>;
        };

        to_game_layer {
            bindings = <&to 4>;
            key-positions = <4 5>;
            layers = <0 1 2 3>;
            timeout-ms = <50>;
        };

        region_screen {
            bindings = <&capture_region>;
            key-positions = <20 25>;
            layers = <0 1 2 3>;
            timeout-ms = <50>;
        };

        combo_backspace2 {
            bindings = <&kp BACKSPACE>;
            key-positions = <3 4>;
            timeout-ms = <50>;
            layers = <0 1 2 3>;
        };

        combo_del1 {
            bindings = <&kp DEL>;
            key-positions = <24 25>;
            timeout-ms = <50>;
            layers = <0 1 2 3>;
        };

        combo_del2 {
            bindings = <&kp DEL>;
            key-positions = <26 27>;
            timeout-ms = <50>;
            layers = <0 1 2 3>;
        };

        /* 			combo_copy {
                timeout-ms = <50>;
                key-positions = <5 31 24>;
                bindings = <&bootloader>;
            };
			combo_paste {
                timeout-ms = <50>;
                key-positions = <5 31 12>;
                bindings = <&bootloader>;
            }; */
    };

    macros {
        capture_region: capture_region {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp PRINTSCREEN>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "CAPTURE_REGION";
        };

        region_capture2: region_capture2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RCTRL>,
                <&macro_tap>,
                <&kp K_APP>,
                <&macro_release>,
                <&kp RCTRL>;

            label = "REGION_CAPTURE2";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┌─────────┬─────────┬─────────┬─────────┬─────────┐                     ┌─────────┬─────────┬─────────┬─────────┬─────────┐
            //             │    Q    │    W    │    F    │    P    │    B    │                     │    J    │    L    │    U    │    Y    │    ;    │   
            //             ├─────────┼─────────┼─────────┼─────────┼─────────┤                     ├─────────┼─────────┼─────────┼─────────┼─────────┤
            //             │    A    │    R    │    S    │    T    │    G    │                     │    M    │    N    │    E    │    I    │    O    │
            //   ┌─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤                     ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┐
            //   │   TAB   │    Z    │    X    │    C    │    D    │    V    │                     │    K    │    H    │    ,    │    .    │    /    │    '    │
            //   └─────────┴─────────┴─────────┴─────────┼─────────┼─────────┼──────────┬┬─────────┼─────────┼─────────┼─────────┴─────────┴─────────┴─────────┘
            //                                           │   COPY  │  PASTE  │  SPACE   ││  ENTER  │  BSPCE  │  DITTO  │  
            //                                           └─────────┴─────────┴──────────┘└─────────┴─────────┴─────────┘

            bindings = <
                    &kp DE_Q               &kp DE_W           &kp DE_E           &kp DE_R             &kp DE_T          &kp DE_Y     &kp DE_U              &kp DE_I            &kp DE_O            &kp DE_P
                    &hm LEFT_CONTROL DE_A  &hm LEFT_ALT DE_S  &hm LEFT_GUI DE_D  &hm LEFT_SHIFT DE_F  &kp DE_G          &kp DE_H     &hm RIGHT_SHIFT DE_J  &hm RIGHT_GUI DE_K  &hm RIGHT_ALT DE_L  &hm RIGHT_CONTROL DE_O_UMLAUT
&mt LEFT_SHIFT TAB  &kp DE_Z               &mt K_CUT DE_X     &mt K_COPY DE_C    &mt K_PASTE DE_V     &kp DE_B          &kp DE_N     &kp DE_M              &kp DE_COMMA        &kp DE_DOT          &kp DE_MINUS                   &kp DE_ESCAPE_CHARACTER
                                                              &kp DELETE         &kp ENTER            &lt 1 DE_SPACE    &lt 2 ENTER  &kp DE_SPACE          &kp BACKSPACE
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        num_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "NUM";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┌─────────┬─────────┬─────────┬─────────┬─────────┐                     ┌─────────┬─────────┬─────────┬─────────┬─────────┐
            //             │    -    │    7    │    8    │    9    │    /    │                     │    /    │    7    │    8    │    9    │    -    │
            //             ├─────────┼─────────┼─────────┼─────────┼─────────┤                     ├─────────┼─────────┼─────────┼─────────┼─────────┤
            //             │    +    │    4    │    5    │    6    │    *    │                     │    *    │    4    │    5    │    6    │    +    │
            //   ┌─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤                     ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┐
            //   │  PRINT  │    .    │    1    │    2    │    3    │ ------- │                     │ ------- │    1    │    2    │    3    │    .    │         │
            //   └─────────┴─────────┴─────────┴─────────┼─────────┼─────────┼──────────┬┬─────────┼─────────┼─────────┼─────────┴─────────┴─────────┴─────────┘
            //                                           │    0    │  ENTER  │  SPACE   ││  SPACE  │  ENTER  │    0    │ 
            //                                           └─────────┴─────────┴──────────┘└─────────┴─────────┴─────────┘

            bindings = <
           &kp KP_MINUS  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_DIVIDE      &kp KP_DIVIDE    &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS
           &kp KP_PLUS   &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_MULTIPLY    &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS
&kp PSCRN  &kp KP_DOT    &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp RET            &kp RET          &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT    &trans
                                    &kp KP_N0  &trans     &kp SPACE          &kp SPACE        &trans     &kp KP_N0
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        media_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "MEDIA";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┌─────────┬─────────┬─────────┬─────────┬─────────┐                    ┌─────────┬─────────┬─────────┬─────────┬─────────┐
            //             │    !    │    @    │    #    │    $    │    %    │                    │    ^    │    &    │    *    │    -    │    +    │   
            //             ├─────────┼─────────┼─────────┼─────────┼─────────┤                    ├─────────┼─────────┼─────────┼─────────┼─────────┤
            //             │    (    │    ←    │    ↑    │    →    │    )    │                    │  PGUP   │    <    │  PLAY   │    >    │   HOME  │
            //   ┌─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤                    ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┐
            //   │         │    [    │    `    │    ↓    │    _    │    ]    │                    │  PGDWN  │   VOL+  │  MUTE   │   VOL-  │   END   │  TO_0   │
            //   └─────────┴─────────┴─────────┴─────────┼─────────┼─────────┼─────────┬┬─────────┼─────────┼─────────┼─────────┴─────────┴─────────┴─────────┘
            //                                           │   ALT   │  CTRL   │  SHIFT  ││         │         │         │  
            //                                           └─────────┴─────────┴─────────┘└─────────┴─────────┴─────────┘

            bindings = <
                 &kp EXCL  &kp AT     &kp HASH  &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS      &kp ASTRK   &kp MINUS     &kp EQUAL
                 &kp LPAR  &kp LEFT   &kp UP    &kp RIGHT  &kp RPAR     &kp PG_UP  &kp C_PREV    &kp C_PP    &kp C_NEXT    &kp HOME
&kp PRINTSCREEN  &kp LBKT  &kp GRAVE  &kp DOWN  &kp UNDER  &kp RBKT     &kp PG_DN  &kp C_VOL_UP  &kp C_MUTE  &kp C_VOL_DN  &kp END    &to 0
                                      &kp LALT  &kp LCTRL  &kp LSHFT    &trans     &trans        &trans
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        function_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "FUNCTION";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┌─────────┬─────────┬─────────┬─────────┬─────────┐                     ┌─────────┬─────────┬─────────┬─────────┬─────────┐
            //             │  RESET  │  BT CLR │ OUT TOG │         │ BTSEL 0 │                     │   INS   │    F7   │    F8   │    F9   │   F12   │
            //             ├─────────┼─────────┼─────────┼─────────┼─────────┤                     ├─────────┼─────────┼─────────┼─────────┼─────────┤
            //             │  BOOTLD │ BT NEXT │         │         │ BTSEL 1 │                     │  SCRL   │    F4   │    F5   │    F6   │   F11   │
            //   ┌─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤                     ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┐
            //   │         │         │ BT PREV │         │         │ BTSEL 2 │                     │  PAUSE  │    F1   │    F2   │    F3   │   F10   │         │
            //   └─────────┴─────────┴─────────┴─────────┼─────────┼─────────┼──────────┬┬─────────┼─────────┼─────────┼─────────┴─────────┴─────────┴─────────┘
            //                                           │         │         │  SPACE   ││         │         │         │ 
            //                                           └─────────┴─────────┴──────────┘└─────────┴─────────┴─────────┘

            bindings = <
        &sys_reset        &bt BT_CLR  &out OUT_TOG            &kp LG(LA(UP_ARROW))     &bt BT_SEL 0    &kp INSERT       &kp F7  &kp F8  &kp F9  &kp F12
        &bootloader       &bt BT_NXT  &kp LG(LA(LEFT_ARROW))  &kp LG(LA(RIGHT_ARROW))  &bt BT_SEL 1    &kp SLCK         &kp F4  &kp F5  &kp F6  &kp F11
&trans  &region_capture2  &bt BT_PRV  &trans                  &kp LG(LA(DOWN_ARROW))   &bt BT_SEL 2    &kp PAUSE_BREAK  &kp F1  &kp F2  &kp F3  &kp F10  &trans
                                      &trans                  &trans                   &kp SPACE       &trans           &trans  &trans
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄		

        game_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "GAME";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┌─────────┬─────────┬─────────┬─────────┬─────────┐                    ┌─────────┬─────────┬─────────┬─────────┬─────────┐
            //             │    1    │    2    │    3    │    4    │    5    │                    │         │         │         │         │         │   
            //             ├─────────┼─────────┼─────────┼─────────┼─────────┤                    ├─────────┼─────────┼─────────┼─────────┼─────────┤
            //             │  SHIFT  │    A    │    W    │    D    │    F    │                    │         │         │         │         │         │
            //   ┌─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤                    ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┐
            //   │ ------- │  CRTL   │ ------- │    S    │    C    │ ------- │                    │         │         │         │         │         │         │
            //   └─────────┴─────────┴─────────┴─────────┼─────────┼─────────┼─────────┬┬─────────┼─────────┼─────────┼─────────┴─────────┴─────────┴─────────┘
            //                                           │   ALT   │  SPACE  │  SPACE  ││         │         │         │  
            //                                           └─────────┴─────────┴─────────┘└─────────┴─────────┴─────────┘

            bindings = <
       &kp N1     &kp N2  &kp N3    &kp N4     &kp N5       &trans  &trans  &trans  &trans  &trans
       &kp LSHFT  &kp A   &kp W     &kp D      &kp F        &trans  &trans  &trans  &trans  &trans
&none  &kp LCTRL  &none   &kp S     &kp C      &none        &trans  &trans  &trans  &trans  &trans  &to 0
                          &kp LALT  &kp SPACE  &kp SPACE    &trans  &trans  &trans
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄		
    };
};
