//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define BASE      0
#define NUM       1
#define MEDIA     2
#define FUNCTION  3
#define GAME      4

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;			// <---[[produces tap if held longer than tapping-term-ms]]
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <0>;
        };

        lc: layer_change {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&to>, <&kp>;
        };

        sc: sticky_layer_change {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&sl>, <&kp>;
        };

        dl: dualayer_change {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&to>, <&sl>;
        };

        ts: temp_sticky {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&mo>, <&to>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            layers = <0 1 2>;
            bindings = <&kp ESC>;
        };

        iterm {
            bindings = <&iterm>;
            key-positions = <4 5>;
        };

        edge {
            bindings = <&edge>;
            key-positions = <14 15>;
        };

        finder {
            bindings = <&finder>;
            key-positions = <25 26>;
        };

        lock {
            bindings = <&kp LC(LG(DE_Q))>;
            key-positions = <20 31>;
        };

        /* 			combo_copy {
                timeout-ms = <50>;
                key-positions = <5 31 24>;
                bindings = <&bootloader>;
            };
			combo_paste {
                timeout-ms = <50>;
                key-positions = <5 31 12>;
                bindings = <&bootloader>;
            }; */
    };

    macros {
        iterm: iterm {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(DE_SPACE) &kp I &kp T &kp E &kp R &kp M &kp RET>;
            label = "ITERM";
        };

        edge: edge {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(DE_SPACE) &kp E &kp D &kp G &kp E &kp RET>;
            label = "EDGE";
        };

        finder: finder {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(DE_SPACE) &kp F &kp I &kp N &kp D &kp E &kp R &kp RET>;
            label = "FINDER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┌─────────┬─────────┬─────────┬─────────┬─────────┐                     ┌─────────┬─────────┬─────────┬─────────┬─────────┐
            //             │    Q    │    W    │    F    │    P    │    B    │                     │    J    │    L    │    U    │    Y    │    ;    │   
            //             ├─────────┼─────────┼─────────┼─────────┼─────────┤                     ├─────────┼─────────┼─────────┼─────────┼─────────┤
            //             │    A    │    R    │    S    │    T    │    G    │                     │    M    │    N    │    E    │    I    │    O    │
            //   ┌─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤                     ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┐
            //   │   TAB   │    Z    │    X    │    C    │    D    │    V    │                     │    K    │    H    │    ,    │    .    │    /    │    '    │
            //   └─────────┴─────────┴─────────┴─────────┼─────────┼─────────┼──────────┬┬─────────┼─────────┼─────────┼─────────┴─────────┴─────────┴─────────┘
            //                                           │   COPY  │  PASTE  │  SPACE   ││  ENTER  │  BSPCE  │  DITTO  │  
            //                                           └─────────┴─────────┴──────────┘└─────────┴─────────┴─────────┘

            bindings = <
                       &kp DE_Q               &kp DE_W           &kp DE_E           &kp DE_R             &kp DE_T          &kp DE_Z     &mt DE_U_UMLAUT DE_U  &kp DE_I            &kp DE_O            &mt DE_SZ DE_P
                       &hm LEFT_CONTROL DE_A  &hm LEFT_ALT DE_S  &hm LEFT_GUI DE_D  &hm LEFT_SHIFT DE_F  &kp DE_G          &kp DE_H     &hm RIGHT_SHIFT DE_J  &hm RIGHT_GUI DE_K  &hm RIGHT_ALT DE_L  &hm RIGHT_CONTROL DE_O_UMLAUT
&mt LS(LG(DE_N4)) TAB  &kp DE_Y               &mt LG(DE_X) DE_X  &mt LG(DE_C) DE_C  &mt LG(DE_V) DE_V    &kp DE_B          &kp DE_N     &kp DE_M              &kp DE_COMMA        &kp DE_DOT          &kp DE_MINUS                   &mt LS(LG(DE_N3)) DE_A_UMLAUT
                                                                 &kp DELETE         &kp ENTER            &lt 1 DE_SPACE    &lt 2 ENTER  &kp DE_SPACE          &kp BACKSPACE
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        num_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "NUM";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┌─────────┬─────────┬─────────┬─────────┬─────────┐                     ┌─────────┬─────────┬─────────┬─────────┬─────────┐
            //             │    -    │    7    │    8    │    9    │    /    │                     │    /    │    7    │    8    │    9    │    -    │
            //             ├─────────┼─────────┼─────────┼─────────┼─────────┤                     ├─────────┼─────────┼─────────┼─────────┼─────────┤
            //             │    +    │    4    │    5    │    6    │    *    │                     │    *    │    4    │    5    │    6    │    +    │
            //   ┌─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤                     ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┐
            //   │  PRINT  │    .    │    1    │    2    │    3    │ ------- │                     │ ------- │    1    │    2    │    3    │    .    │         │
            //   └─────────┴─────────┴─────────┴─────────┼─────────┼─────────┼──────────┬┬─────────┼─────────┼─────────┼─────────┴─────────┴─────────┴─────────┘
            //                                           │    0    │  ENTER  │  SPACE   ││  SPACE  │  ENTER  │    0    │ 
            //                                           └─────────┴─────────┴──────────┘└─────────┴─────────┴─────────┘

            bindings = <
                &kp DE_N1  &kp DE_N2  &kp DE_N3  &kp DE_N4  &kp DE_N5    &kp DE_N6         &kp DE_N7            &kp DE_N8    &kp DE_N9    &kp DE_N0
                &kp F1     &kp F2     &kp F3     &kp F4     &kp F5       &kp F6            &kp F7               &kp F8       &kp F9       &kp F10
&kp LEFT_SHIFT  &none      &none      &none      &none      &none        &kp DE_LESS_THAN  &kp DE_GREATER_THAN  &kp DE_PIPE  &kp DE_PLUS  &kp DE_MINUS  &kp F11
                                      &kp KP_N0  &kp ENTER  &kp SPACE    &kp DE_HASH       &kp DE_SPACE         &none
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        movement {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "MEDIA";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┌─────────┬─────────┬─────────┬─────────┬─────────┐                    ┌─────────┬─────────┬─────────┬─────────┬─────────┐
            //             │    !    │    @    │    #    │    $    │    %    │                    │    ^    │    &    │    *    │    -    │    +    │   
            //             ├─────────┼─────────┼─────────┼─────────┼─────────┤                    ├─────────┼─────────┼─────────┼─────────┼─────────┤
            //             │    (    │    ←    │    ↑    │    →    │    )    │                    │  PGUP   │    <    │  PLAY   │    >    │   HOME  │
            //   ┌─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤                    ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┐
            //   │         │    [    │    `    │    ↓    │    _    │    ]    │                    │  PGDWN  │   VOL+  │  MUTE   │   VOL-  │   END   │  TO_0   │
            //   └─────────┴─────────┴─────────┴─────────┼─────────┼─────────┼─────────┬┬─────────┼─────────┼─────────┼─────────┴─────────┴─────────┴─────────┘
            //                                           │   ALT   │  CTRL   │  SHIFT  ││         │         │         │  
            //                                           └─────────┴─────────┴─────────┘└─────────┴─────────┴─────────┘

            bindings = <
       &kp DE_EXCL  &kp DE_DOUBLE_QUOTES     &kp DE_SECTION  &kp DE_DOLLAR   &kp DE_PERCENT    &kp DE_AMPERSAND  &kp DE_SLASH         &kp UP       &kp LS(EQUAL)  &kp DE_QUESTION
       &kp LCTRL    &hm LEFT_ALT DE_SHARP_S  &kp LEFT_WIN    &kp LEFT_SHIFT  &kp K_UNDO        &none             &kp LEFT_ARROW       &kp DOWN     &kp RIGHT      &kp HOME
&none  &none        &none                    &none           &none           &none             &kp DE_LESS_THAN  &kp DE_GREATER_THAN  &kp DE_PIPE  &kp DE_PLUS    &kp END          &to 0
                                             &kp LALT        &kp LCTRL       &kp LSHFT         &trans            &trans               &trans
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄		
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄		
    };
};
